der,cer文件一般是二进制格式的，只放证书，不含私钥
crt文件可能是二进制的，也可能是文本格式的，应该以文本格式居多，功能同der/cer
pem文件一般是文本格式的，可以放证书或者私钥，或者两者都有
pem如果只含私钥的话，一般用.key扩展名，而且可以有密码保护
pfx,p12文件是二进制格式，同时含私钥和证书，通常有保护密码

3.使用openssl生成证书
mkdir -p /etc/nginx/ssl
cd /etc/nginx/ssl
1)创建根证私钥  
openssl genrsa -out root-key.key 1024  
2)创建根证书请求文件  
openssl req -new -out root-req.csr -key root-key.key  
  
具体如下  
[root@localhost sslKey]# openssl req -new -out root-req.csr -key root-key.key  
You are about to be asked to enter information that will be incorporated  
into your certificate request.  
What you are about to enter is what is called a Distinguished Name or a DN.  
There are quite a few fields but you can leave some blank  
For some fields there will be a default value,  
If you enter '.', the field will be left blank.  
-----  
Country Name (2 letter code) [XX]:cn  
State or Province Name (full name) []:js  
Locality Name (eg, city) [Default City]:sz  
Organization Name (eg, company) [Default Company Ltd]:career  
Organizational Unit Name (eg, section) []:geek  
Common Name (eg, your name or your server's hostname) []:Hisalari CA 
Email Address []:  
  
Please enter the following 'extra' attributes  
to be sent with your certificate request  
A challenge password []:  
An optional company name []:    

在2)的时候,会让填写信息,其中国家,省市,公司等需要和后面的证书保持一致.后面challenge password的地方直接回车就好
3)自签根证书  
openssl x509 -req -in root-req.csr -out root-cert.cer -signkey root-key.key -CAcreateserial -days 3650  

4)生成p12格式根证书,密码填写pass  
openssl pkcs12 -export -clcerts -in root-cert.cer -inkey root-key.key -out root.p12  

5)生成服务端key  
openssl genrsa -out server-key.key 1024  

6)生成服务端请求文件  
openssl req -new -out server-req.csr -key server-key.key  
  
具体如下  
[root@localhost sslKey]# openssl req -new -out server-req.csr -key server-key.key  
You are about to be asked to enter information that will be incorporated  
into your certificate request.  
What you are about to enter is what is called a Distinguished Name or a DN.  
There are quite a few fields but you can leave some blank  
For some fields there will be a default value,  
If you enter '.', the field will be left blank.  
-----  
Country Name (2 letter code) [XX]:cn  
State or Province Name (full name) []:js  
Locality Name (eg, city) [Default City]:sz 
Organization Name (eg, company) [Default Company Ltd]:career  
Organizational Unit Name (eg, section) []:geek  
Common Name (eg, your name or your server's hostname) []:59.110.232.99   注意：一定要写服务器所在的ip地址  
Email Address []:  
  
Please enter the following 'extra' attributes  
to be sent with your certificate request  
A challenge password []:  
An optional company name []:  

在6)的时候,国家省市公司和2)保持一致, Common Name 要特别注意, 要用你服务器的域名,我们测试用59.110.232.99
7)生成服务端证书（root证书，rootkey，服务端key，服务端请求文件这4个生成服务端证书）  
openssl x509 -req -in server-req.csr -out server-cert.cer -signkey server-key.key -CA root-cert.cer -CAkey root-key.key -CAcreateserial -days 3650  

8)生成客户端key  
openssl genrsa -out client-key.key 1024  

9)生成客户端请求文件  
openssl req -new -out client-req.csr -key client-key.key  
  
具体如下  
[root@localhost sslKey]# openssl req -new -out client-req.csr -key client-key.key  
You are about to be asked to enter information that will be incorporated  
into your certificate request.  
What you are about to enter is what is called a Distinguished Name or a DN.  
There are quite a few fields but you can leave some blank  
For some fields there will be a default value,  
If you enter '.', the field will be left blank.  
-----  
Country Name (2 letter code) [XX]:cn  
State or Province Name (full name) []:js  
Locality Name (eg, city) [Default City]:sz  
Organization Name (eg, company) [Default Company Ltd]:career  
Organizational Unit Name (eg, section) []:geek  
Common Name (eg, your name or your server's hostname) []:Hisalari Client 
Email Address []:  
  
Please enter the following 'extra' attributes  
to be sent with your certificate request  
A challenge password []:  
An optional company name []:
  
10)生成客户端证书（root证书，rootkey，客户端key，客户端请求文件这4个生成客户端证书）  
openssl x509 -req -in client-req.csr -out client-cert.cer -signkey client-key.key -CA root-cert.cer -CAkey root-key.key -CAcreateserial -days 3650  

11)生成客户端p12格式根证书(密码设置pass)  
openssl pkcs12 -export -clcerts -in client-cert.cer -inkey client-key.key -out client.p12  

4.nginx配置(服务器端)

server {
	listen 443 ssl; 
	server_name 59.110.232.99;     

	ssl                 	on;    
	ssl_certificate      	/etc/nginx/ssl/server-cert.cer;  	#server证书公钥  
	ssl_certificate_key  	/etc/nginx/ssl/server-key.key;  	#server私钥  
	ssl_client_certificate 	/etc/nginx/ssl/root-cert.cer;  		#根级证书公钥，用于验证各个二级client  
	ssl_verify_client 		on;  								#开启客户端证书验证 
	ssl_session_cache 		shared:SSL:10m;						#session缓存
	ssl_session_timeout 	30m;                        		#session有效期，5分钟    
	 
	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    
	#ssl_ciphers 'AES128+EECDH:AES128+EDH:!aNULL';  	#加密算法    
	#ssl_prefer_server_ciphers on;   
}

server {
	listen 80;
	server_name 59.110.232.99;
	rewrite ^ https://$server_name$request_uri? permanent;
}

client.p12导入个人
root.p12导入受信任的根证书颁发机构
certmgr.msc，查看证书

http://blog.csdn.net/qq315737546/article/details/52864220